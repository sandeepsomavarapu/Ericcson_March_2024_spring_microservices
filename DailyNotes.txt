Day-1:
========
Spring Core :
=============
Spring Framework:
==================

	boiler plate code 
	
	frameworks
		
		1)Invasive   
			
			struts:even though its a framework ,it will force to the developer to implement predefined API
			
		2)non -invasive 

			spring,hibernate:it will never force to the developer to implement predefined API
			
			
	spring is a non-invasive framework,which is used to create loosley coupled and light weight application.






servlet


	1)implements Servlet
	2)extends GerneicServlet
	3)extends HttpServlet

	3 HttpServlet-->12 methods


1*12=12 

1000*12=12000
class Login
{


}

EJB-->Rod Johnson-->interface-21 -->spring framework--2003 1.x
														   6.x
									windows-11
									iphone-15
tightly coupled:
================

class Test
{
	public Test(String name)
	{
	.....
	
	}
public void m1()
{


}

}

class Sample
{

p s v main(String args[])
{
 Test test =new Test();			
		test.m1();

}

}


-->springcontainer -->BeanFactory,ApplicationContext

		1)creation of object
		2)wiring the object
		3)configuring the object
		4)destroying the object 


spring framework:dependency injection/IOC/Spring core 

loosley coupled 

				
		class info
	configuration file-->container --->instantiation--->getBean


		xml  <beans><bean>,class,id,ref,scope,autowire-->@Autowired
		annotation
		java 



spring core 
		setter injection-->setter methood --><property>
		constructor injection-->constructor---><constructor-arg>			
		autowiring 


NOTE:
=====

spring has given annotations like @Component/@Service/@Repository... 
for userdefined classes but not for predefined classes


		
Java config:
============


@Bean
public Employee getEmployee(){

	return new Employee();

}

AutoConfiguration

JDBC-->java -->database -->API-->sun micro system 5 steps

	JPA-->specification
	
		ORM tools-->hibernate,eclipse link,top link,ibatis....


employee-->operations
	

Employee


Client


META-INF-->persistance.xml

	database properties
	username
	password
	driverclass
	url
	
	
	
	hibernate properties 



JPQL:
			java persistence query language 
			
			mysql
			
			JPQL
			querys:datababase independent 


SpringBoot:
============		spring 4.x -->spring boot  3.x java17
		
	1)configuration
	2)server
	3)jars					
	
	SPring boot

1)auto configuration (most of the commonly used classes already configured by the springboot)
2)Embeded Server		tomcat server
3)starters			 spring-boot-starter-parent-->
4)Actuators  	end point urls /beans /health /env insite 



	datasource-->hikari,tomcat,c3po   <exclusions><exclude> 
	-->dispatcherServlet--viewResolver


STS->spring tool suite 

spring intializer


Webservices:
============

	URL
	REST

for testing Postman tool/swagger 




Productmanagement 

	1)Add Product
	2)Update Product
	3)Delete Product
	4)Get Product
	5)Get All Products
	6)Get All products between the prices
	7)Get All Products By Category
	8)Get All Products by Brand
	
	
	Rest-->JP-->hibernate-->mysql
	
	
	

	url
		@Component/@Service/@Repository
		@Configuration
		@ComponentScan
		@Autowired
		@Scope
		@Value
		@Bean
		
		
		@RequestMapping(value="/login",method=MethodType.POST)
		@PostMapping
		@GetMapping
		@PutMapping
		@DeleMapping
		
		@Controller
		@RequestBody
		@ResponseBody
		@RestController
		
		
		
		
		
		
		
		
		
		
		
		
		
		























